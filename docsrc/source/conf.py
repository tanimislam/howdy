
# -*- coding: utf-8 -*-
#
# howdy documentation build configuration file, created by
# sphinx-quickstart on Sun Jun 23 11:03:17 2019.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os, sys, datetime, re
from functools import reduce
from sphinx.util import logging
_mainDir = reduce(lambda x,y: os.path.dirname( x ),
                  range(2), os.path.abspath('.'))
sys.path.insert( 0, _mainDir )

is_in_readthedocs = ( os.environ.get( 'READTHEDOCS' ) is not None )

logger = logging.getLogger( __name__ )
logger.debug( "mainDir = %s" % _mainDir)
logger.debug( 'READTHEDOCS: %s.' % os.environ.get('READTHEDOCS') )

#
## now don't verify the TLS if not in READTHEDOCS
#tls_verify = is_in_readthedocs
tls_verify = True

#
## following instructions on https://docs.readthedocs.io/en/latest/faq.html#i-get-import-errors-on-libraries-that-depend-on-c-modules
## and instructions on https://stackoverflow.com/questions/28178644/python-readthedocs-how-to-satisfy-the-requirement-sip-or-pyqt/37363830#37363830
## because CANNOT install PyQt4 and stuff in readthedocs
#autodoc_mock_imports = [ 'sip', 'PyQt4', 'PyQt4.QtGui', 'PyQt4.QtCore' ]
#autodoc_mock_imports = ['sip', 'PyQt5', 'PyQt5.QtGui', 'PyQt5.QtCore', 'PyQt5.QtWidgets' ]
#if os.environ.get( 'READTHEDOCS' ):
#    MOCK_MODULES = ['sip', 'PyQt4', 'PyQt4.QtGui', 'PyQt4.QtCore' ]
#    sys.modules.update((mod_name, mock.MagicMock()) for mod_name in MOCK_MODULES)


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.mathjax',
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.autodoc',
    'sphinx.ext.intersphinx',
    'sphinx.ext.napoleon',
    'sphinx.ext.todo',
    'sphinxcontrib.youtube',
    'sphinx_issues',
    'sphinxarg.ext',
]

#
## following instructions here (https://github.com/svenevs/exhale/tree/master/docs/_intersphinx) to fix beautifulsoup doc.
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'requests': ( 'https://requests.readthedocs.io/en/latest', None),
    'beautifulsoup' : ( 'https://www.crummy.com/software/BeautifulSoup/bs4/doc', "_intersphinx/bs4_objects.inv"),
    'geoip2' : ( 'https://geoip2.readthedocs.io/en/latest', None),
    'gmusicapi' : ( 'https://unofficial-google-music-api.readthedocs.io/en/latest', None ),
    'cinemagoer' : ( 'https://cinemagoer.readthedocs.io/en/latest', None),
    'pyqt5' : ( 'https://www.riverbankcomputing.com/static/Docs/PyQt5', "_intersphinx/pyqt5_objects.inv" ),
    'requests_oauthlib' : ( 'https://requests-oauthlib.readthedocs.io/en/latest', None ),
    'oauth2client' : ( 'https://oauth2client.readthedocs.io/en/latest', None ),
    'google-auth' : ( 'https://google-auth.readthedocs.io/en/latest', None ),
    'deluge' : ( 'https://deluge.readthedocs.io/en/latest', None ),
    'transmission_rpc' : ( 'https://transmission-rpc.readthedocs.io/en/stable', None ),
    'plexapi' : ( 'https://python-plexapi.readthedocs.io/en/latest', None ),
    'sqlalchemy' : ( 'https://docs.sqlalchemy.org', None ),
    'subliminal' : ( 'https://subliminal.readthedocs.io/en/latest/', None ),
    'musicbrainzngs' : ( 'https://python-musicbrainzngs.readthedocs.io/en/latest', None ),
    'pillow' : ( 'https://pillow.readthedocs.io/en/stable', None ),
    'pandas' : ( 'http://pandas.pydata.org/pandas-docs/stable', None ),
}

#
## write out todos
todo_include_todos = True

#
## do not verify SSL
verify = False

#
## numfig stuff
numfig = True

#
## GitHub repo
issues_github_path = "tanimislam/howdy"


#
## change favicon to CADUCEUS logo
#html_logo = '_static/howdy_icon.svg'
html_favicon = '_static/howdy_icon_VECTA.svg'
#html_theme_options = {
#    'logo_only': False,
#}

# Add any paths that contain templates here, relative to this directory.
templates_path = [ '_templates' ]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = {
    '.rst' : 'restructuredtext' }

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'howdy!'
copyright = u'%d' % datetime.datetime.now( ).year
author = u'Tanim Islam'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#

# The full version, including alpha/beta/rc tags.
# follow insructions from https://protips.readthedocs.io/git-tag-version.html#inferring-release-number-from-git-tags
release = re.sub('^v', '', os.popen('git describe --tags').read().strip())
# The short X.Y version.
version = release.split('-')[0].strip( )

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_sidebars = {
   '**': ['globaltoc.html', 'sourcelink.html', 'searchbox.html'],
   'using/windows': ['windowssidebar.html', 'searchbox.html'],
}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# dark mode if uncommented
# html_css_files = [ 'rtd_dark.css' ]

html_css_files = [
    'custom.css',
]

#
## LaTeX engine, from https://www.sphinx-doc.org/en/master/latex.html
latex_engine = 'xelatex'
